1,如何导入一个目录下的py文件
假设要导入同级目录modules下的main.py文件，此时需要在modules目录下面建立__init__.py文件
导入代码如下：
import os,sys

BASE_DIR=os.path.dirname(os.path.abspath(__file__))   #获取modules所在的上级目录
sys.path.append(BASE_DIR)                              #加入到环境变量里面，加到里面，python解释器就会到该目录下寻找要导入的模块
from modules import main

if __name__ == '__main__':
        main.test()     

2，从配置文件里面导入变量
同上，要导入同级目录conf下面settings.py里面定义好的变量，也需要在该目录下建立__init__.py文件
导入代码如下：
import os,sys

BASE_DIR=os.path.dirname(os.path.abspath(__file__))   #获取conf所在的上级目录
sys.path.append(BASE_DIR)                              #加入到环境变量里面，加到里面，python解释器就会到该目录下寻找要导入的模块
from conf import settings

if __name__ == '__main__':
        print settings.ip
	print settings.port

3，反射：
判断一个类中是否存在一个方法
class MyClass(object):

        def __init__(self,*args):
                self.args=args

        def test(self):
                first_argv=self.args[0]
                if hasattr(self,first_argv):    #判断该对象中是否存在first_argv这个方法
                        func=getattr(self,first_argv)
                        func()

        def start(self):
                print 'start'

m=MyClass('start')
m.test()           